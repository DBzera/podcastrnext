{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/d/GitHub/podcastrnext/src/pages/episodes/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport styles from './episode.module.scss';\nimport { usePlayer } from '../../contexts/PlayerContext';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n\n  var _usePlayer = usePlayer(),\n      play = _usePlayer.play;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/arrow-left.svg\",\n            alt: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return play(episode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar epis\\xF3dio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.description,\n      dangerouslySetInnerHTML: {\n        __html: episode.description\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Episode, \"mptMREsNBTdRfLLVAN69g5qilFU=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/mnt/d/GitHub/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["Image","Link","styles","usePlayer","Episode","episode","play","thumbnailContainer","thumbnail","title","members","publishedAt","durationAsString","description","__html"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,YAAlB;AAGA,OAAOC,IAAP,MAAiB,WAAjB;AAIA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,SAAT,QAA0B,8BAA1B;;AAkBA,eAAe,SAASC,OAAT,OAA4C;AAAA;;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;;AAAA,mBACxCF,SAAS,EAD+B;AAAA,MACjDG,IADiD,cACjDA,IADiD;;AAGzD,sBACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACG,OAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACK,kBAAvB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,iBAAT;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,GAAG,EAAEF,OAAO,CAACG,SAHf;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cANF,eAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMF,IAAI,CAACD,OAAD,CAAV;AAAA,SAA/B;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAA,8BACE;AAAA,kBAAKA,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOJ,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAOL,OAAO,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAON,OAAO,CAACO;AAAf;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAyBE;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,WAAvB;AAAoC,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAET,OAAO,CAACQ;AAAlB;AAA7D;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAhCuBT,O;UACLD,S;;;KADKC,O","sourcesContent":["import { format, parseISO } from 'date-fns';\r\nimport Image from 'next/image';\r\nimport ptBR from 'date-fns/locale/pt-BR';\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport Link from 'next/link';\r\nimport { api } from '../../services/api';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\nimport styles from './episode.module.scss';\r\nimport { usePlayer } from '../../contexts/PlayerContext';\r\n\r\ntype Episode = {\r\n  id: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  members: string;\r\n  duration: number;\r\n  durationAsString: string;\r\n  url: string;\r\n  publishedAt: string;\r\n  description: string;\r\n};\r\n\r\ntype EpisodeProps = {\r\n  episode: Episode\r\n};\r\n\r\nexport default function Episode({ episode }: EpisodeProps) {\r\n  const { play } = usePlayer();\r\n\r\n  return (\r\n    <div className={styles.episode}>\r\n      <div className={styles.thumbnailContainer}>\r\n        <Link href=\"/\">\r\n          <button type=\"button\">\r\n            <img src=\"/arrow-left.svg\" alt=\"Voltar\" />\r\n          </button>\r\n        </Link>\r\n        <Image \r\n          width={700}\r\n          height={160}\r\n          src={episode.thumbnail}\r\n          objectFit=\"cover\"\r\n        />\r\n        <button type=\"button\" onClick={() => play(episode)}>\r\n          <img src=\"/play.svg\" alt=\"Tocar episÃ³dio\" />\r\n        </button>\r\n      </div>\r\n\r\n      <header>\r\n        <h1>{episode.title}</h1>\r\n        <span>{episode.members}</span>\r\n        <span>{episode.publishedAt}</span>\r\n        <span>{episode.durationAsString}</span>\r\n      </header>\r\n\r\n      <div className={styles.description} dangerouslySetInnerHTML={{ __html: episode.description }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  const { data } = await api.get('episodes', { \r\n    params: {\r\n      _limit: 2,\r\n      _sort: 'published_at',\r\n      _order: 'desc'\r\n    }\r\n  })\r\n\r\n  const paths = data.map(episode => {\r\n    return {\r\n      params: {\r\n        slug: episode.id\r\n      }\r\n    }\r\n  })\r\n\r\n  return {\r\n    paths: [],\r\n    fallback: 'blocking'\r\n  }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n  const { slug } = ctx.params;\r\n\r\n  const { data } = await api.get(`/episodes/${slug}`)\r\n\r\n  const episode = {\r\n    id: data.id,\r\n    title: data.title,\r\n    thumbnail: data.thumbnail,\r\n    members: data.members,\r\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\r\n    duration: Number(data.file.duration),\r\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n    description: data.description,\r\n    url: data.file.url,\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      episode,\r\n    },\r\n    revalidate: 60 * 60 * 24, // 24 hours\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}